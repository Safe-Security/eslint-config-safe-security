module.exports = {
    env: {
        browser: true,
        node: true,
        es6: true
    },
    extends: [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:security/recommended",
        "plugin:sonarjs/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:functional/external-recommended",
        "plugin:functional/recommended"
    ],
    parser: "@typescript-eslint/parser",
    plugins: [
        "@typescript-eslint",
        "security",
        "functional",
        "no-secrets",
        "no-param-reassign-allow-reduce"
    ],
    parserOptions: {
        project: "./tsconfig.json",
        ecmaVersion: 11,
        sourceType: "module"
    },
    rules: {
        "sonarjs/no-redundant-jump": "off",
        "no-secrets/no-secrets": "error",
        "security/detect-buffer-noassert": "error",
        "security/detect-child-process": "error",
        "security/detect-disable-mustache-escape": "error",
        "security/detect-eval-with-expression": "error",
        "security/detect-new-buffer": "error",
        "security/detect-no-csrf-before-method-override": "error",
        "security/detect-non-literal-fs-filename": "error",
        "security/detect-non-literal-regexp": "error",
        "security/detect-non-literal-require": "error",
        "security/detect-object-injection": "error",
        "security/detect-possible-timing-attacks": "error",
        "security/detect-pseudoRandomBytes": "error",
        "security/detect-unsafe-regex": "error",
        "functional/no-mixed-type": "off",
        "functional/no-let": "off",
        "functional/no-return-void": "off",
        "functional/no-expression-statement": "off",
        "functional/no-conditional-statement": "off",
        "functional/no-try-statement": "off",
        "functional/prefer-readonly-type": "off",
        "functional/functional-parameters": "off",
        "security/detect-object-injection": "off",
        "functional/prefer-type-literal": "off",
        "no-console": "error",
        "no-template-curly-in-string": "error",
        curly: "error",
        "default-case": "error",
        "default-case-last": "error",
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": ["error"],
        "dot-notation": "error",
        eqeqeq: "error",
        "no-alert": "error",
        "no-else-return": "error",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": ["error"],
        "no-eval": "error",
        "no-floating-decimal": "error",
        "no-loop-func": "error",
        "no-magic-numbers": "off",
        "@typescript-eslint/no-require-imports": "error",
        "no-multi-str": "error",
        "no-new-wrappers": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "off",
        "no-param-reassign-allow-reduce/allow-reduce": "error",
        "no-param-reassign-allow-reduce/no-reduce-identifiers": "error",
        "no-return-assign": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-throw-literal": "off",
        "@typescript-eslint/no-throw-literal": "error",
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "prefer-regex-literals": "error",
        "require-await": "off",
        "@typescript-eslint/require-await": "error",
        yoda: "error",
        "init-declarations": "off",
        "@typescript-eslint/init-declarations": ["error"],
        "no-shadow": ["error", { builtinGlobals: false, hoist: "all" }],
        "no-undef-init": "error",
        camelcase: "off",
        "import/no-duplicates": "off",
        "import/named": "error",
        "import/export": "error",
        "import/order": [
            "error",
            { "newlines-between": "always-and-inside-groups" }
        ],
        "import/newline-after-import": "error",
        "import/no-absolute-path": "error",
        "import/no-cycle": "error",
        "import/no-mutable-exports": "error",
        "import/no-self-import": "error",
        "import/first": "error",
        "comma-dangle": "error",
        "id-length": "error",
        "line-comment-position": "error",
        "max-depth": "error",
        "max-nested-callbacks": ["error", { max: 3 }],
        "max-params": ["error", { max: 5 }],
        "multiline-comment-style": ["error", "starred-block"],
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": ["error"],
        "no-bitwise": "error",
        "no-continue": "error",
        "no-inline-comments": "error",
        "no-lonely-if": "error",
        "no-multi-assign": "error",
        "no-nested-ternary": "error",
        "no-new-object": "error",
        "no-unneeded-ternary": "error",
        "prefer-exponentiation-operator": "error",
        "prefer-object-spread": "error",
        "no-confusing-arrow": "error",
        "no-duplicate-imports": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructuring": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/array-type": [
            "error",
            { default: "array", readonly: "array" }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            { allowExpressions: true }
        ],
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/method-signature-style": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                selector: "default",
                format: ["camelCase"]
            },
            {
                selector: "variable",
                types: ["boolean"],
                format: ["PascalCase"],
                prefix: ["is", "should", "has", "can", "did", "will"]
            },
            {
                selector: "variable",
                format: ["camelCase", "UPPER_CASE", "PascalCase"]
            },
            {
                selector: "property",
                format: ["camelCase", "UPPER_CASE", "PascalCase"]
            },
            {
                selector: "parameter",
                format: ["camelCase"],
                leadingUnderscore: "allow"
            },
            {
                selector: "typeLike",
                format: ["PascalCase"]
            },
            {
                selector: "interface",
                format: ["PascalCase"],
                custom: {
                    regex: "^I[A-Z]",
                    match: false
                }
            }
        ]
    },
    ignorePatterns: ["node_modules", "build"]
};
